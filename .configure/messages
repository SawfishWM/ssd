#!/bin/bash
#########################################################
# 							#
# This is BashStyle-NG  				#
#							#
# Licensed under GNU GENERAL PUBLIC LICENSE v3    	#
#							#
# Copyright 2007 - 2015 Christopher Bratusek		#
#							#
#########################################################

section_message () {

	if [[ ${QUIET} != "true" ]]; then
		case $1 in
			APP )		echo -e "\n${RED}< Required ${WHITE}Applications" ;;
			OPT_APP )	echo -e "\n${MAGENTA}< Optional ${WHITE}Applications" ;;
			SBINAPP )	echo -e "\n${RED}< Required ${WHITE}SuperUser Applications" ;;
			OPT_SBINAPP )	echo -e "\n${MAGENTA}< Optional ${WHITE}SuperUser Applications" ;;
			PY )		echo -e "\n${RED}< Python Interpreter${WHITE} > 2.6 && < 3.5" ;;
			PYMOD )		echo -e "\n${RED}< Required ${WHITE}Python Modules" ;;
			OPT_PYMOD )	echo -e "\n${MAGENTA}< Optional ${WHITE}Python Modules" ;;
			LIB )		echo -e "\n${RED}< Required ${WHITE}Libraries" ;;
			OPT_LIB )	echo -e "\n${MAGENTA}< Optional ${WHITE}Libraries" ;;
			GIR )		echo -e "\n${RED}< Required ${WHITE}GIR Repositories" ;;
			OPT_GIR)	echo -e "\n${MAGENTA}< Optional ${WHITE}GIR Repositories" ;;
		esac
	fi
	tput sgr0

}

start_message () {

	echo -e "\n${WHITE}Configuring ${GREEN}SSD${YELLOW} v${xVERSION} ${CYAN}(${CODENAME})"
	tput sgr0

}

ok_message () {

	if [[ ${QUIET} != "true" ]]; then
		if [[ $2 != "" ]]; then
			echo -e "${WHITE}\t+ ${CYAN}$1${MAGENTA} >${GREEN} OK${SILVER} ( $2 )"
		else	echo -e "${WHITE}\t+ ${CYAN}$1${MAGENTA} >${GREEN} OK"
		fi
	fi
	tput sgr0
}

fail_message () {

	case $1 in
		m )	echo -e "${WHITE}\t+ ${CYAN}$2${MAGENTA} >${RED} !MISSING!" ;;
		o )	echo -e "${WHITE}\t+ ${CYAN}$2${MAGENTA} >${RED} !OLDER THAN $3!" ;;
		p )	echo -e "${WHITE}\t+ ${CYAN}Python ($PYTHON)${MAGENTA} >${RED} !MISSING!" ;;
		p- )	echo -e "${WHITE}\t+ ${CYAN}Python ($PYTHON)${MAGENTA} >${RED} !OLDER THAN 2.7.0!" ;;
		p+ )	echo -e "${WHITE}\t+ ${CYAN}Python ($PYTHON)${MAGENTA} >${RED} !IS 3.5 OR ABOVE!" ;;
	esac
	tput sgr0

}

warn_message () {

	echo -e "${WHITE}\t+ ${CYAN}$1${MAGENTA} >${YELLOW} Not Available\
		\n\t  > ${WHITE}$2"
	tput sgr0

}

maintainer_message () {

	echo -e "\n${RED}Maintainer Mode ${WHITE}/ ${GREEN}Disabled Checks"
	tput sgr0

}

end_message () {

	export PATH="$OLDPATH"
	echo -e "\n${BLUE}Notes from configure:\
		 \n${YELLOW}Prefix\t\t\t${WHITE}>${MAGENTA} ${PREFIX}\n"
	tput sgr0

}

help_message () {

	echo -e "\n${GREEN}SSD ${MAGENTA}v${xVERSION}${WHITE} / ${YELLOW}(Configure 4.3.0) ${CYAN}help
	\n${WHITE}Options:"
	echo -e "${ORANGE}--help${WHITE} *|${GREEN} Display this help message\
	\n${ORANGE}--mode=<mode>${WHITE} *|${GREEN} user (do checks) or maintainer (skip checks)\
	\n${ORANGE}--prefix=<prefix>${WHITE} *|${GREEN} Change installation prefix (default: /usr)\
	\n${ORANGE}--quiet${WHITE} *|${GREEN} Only display warnings, failures and results"| column -t -s \*
	tput sgr0

}
